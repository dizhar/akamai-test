{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2020-02-03T11:07:51.895Z",
    "end": "2020-02-03T11:08:53.190Z",
    "duration": 61295,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d2b952cf-3d8f-4202-9e4d-8456d4a4427c",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2f639c0f-3212-4c24-9fc7-ad7da3c02059",
          "title": "Authentication test: ",
          "fullFile": "C:\\akamai-test\\lib\\index.js",
          "file": "\\lib\\index.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "Authentication test:  \"before each\" hook",
              "timedOut": false,
              "duration": 7026,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, launchPuppeteer_1.default()];\n                case 1:\n                    browser = _a.sent();\n                    return [4, browser.newPage()];\n                case 2:\n                    page = _a.sent();\n                    _puppeterrGet = new puppeteerGet_1.default(page);\n                    _puppeteerSet = new pupppeteerSet_1.default(page);\n                    _puppeteerVerify = new puppeteerVerify_1.default(page);\n                    return [4, _puppeteerSet.loadPage(baseURL, 30000)];\n                case 3:\n                    _a.sent();\n                    return [2];\n            }\n        });\n    });",
              "err": {},
              "uuid": "b0037ab9-7fc5-48a0-9566-8190a408c5d2",
              "parentUUID": "2f639c0f-3212-4c24-9fc7-ad7da3c02059",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "Authentication test:  \"after each\" hook",
              "timedOut": false,
              "duration": 845,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, browser.close()];\n                case 1:\n                    _a.sent();\n                    return [2];\n            }\n        });\n    });",
              "err": {},
              "uuid": "83ef9fff-cb0a-458b-afe6-9190ed4c308f",
              "parentUUID": "2f639c0f-3212-4c24-9fc7-ad7da3c02059",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Should not get a page error message, when not adding the injectable.js script",
              "fullTitle": "Authentication test:  Should not get a page error message, when not adding the injectable.js script",
              "timedOut": false,
              "duration": 3187,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, _puppeteerVerify.verifyPageErrors()];\n                case 1:\n                    _a.sent();\n                    return [4, _puppeteerVerify.verifyWebPagePerformance()];\n                case 2:\n                    _a.sent();\n                    return [2];\n            }\n        });\n    });",
              "err": {},
              "uuid": "98efe98a-ab1d-4b3a-a89f-46de26e7bf7a",
              "parentUUID": "2f639c0f-3212-4c24-9fc7-ad7da3c02059",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should get page error message, \"Error: CX Internals not found...\", when adding the injectable.js script",
              "fullTitle": "Authentication test:  Should get page error message, \"Error: CX Internals not found...\", when adding the injectable.js script",
              "timedOut": false,
              "duration": 181,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, _puppeteerVerify.verifyPageErrors(\"Error: CX Internals not found\")];\n                case 1:\n                    _a.sent();\n                    return [4, _puppeteerSet.addScriptTpPage(\"./lib/files/injectable.js\")];\n                case 2:\n                    _a.sent();\n                    return [2];\n            }\n        });\n    });",
              "err": {},
              "uuid": "2ee1f846-91d1-4bb2-aa3a-fda0fcb9944a",
              "parentUUID": "2f639c0f-3212-4c24-9fc7-ad7da3c02059",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not get a page error, when not adding the injectable.js script into the login page ",
              "fullTitle": "Authentication test:  Should not get a page error, when not adding the injectable.js script into the login page ",
              "timedOut": false,
              "duration": 6536,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, _puppeteerSet.loadPage(\"https://www.delta.com/login/loginPage\", 5000)];\n                case 1:\n                    _a.sent();\n                    return [4, _puppeteerVerify.verifyPageErrors()];\n                case 2:\n                    _a.sent();\n                    return [4, _puppeteerVerify.verifyWebPagePerformance()];\n                case 3:\n                    _a.sent();\n                    return [2];\n            }\n        });\n    });",
              "err": {},
              "uuid": "1dd6feae-aa4c-4214-a0b5-f56d3b4888d6",
              "parentUUID": "2f639c0f-3212-4c24-9fc7-ad7da3c02059",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should get page error message, \"Error: CX Internals not found...\", when adding the injectable.js script into the https://www.delta.com/login/loginPage",
              "fullTitle": "Authentication test:  Should get page error message, \"Error: CX Internals not found...\", when adding the injectable.js script into the https://www.delta.com/login/loginPage",
              "timedOut": false,
              "duration": 6413,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, _puppeteerSet.loadPage(\"https://www.delta.com/login/loginPage\", 5000)];\n                case 1:\n                    _a.sent();\n                    return [4, _puppeteerVerify.verifyPageErrors(\"Error: CX Internals not found\")];\n                case 2:\n                    _a.sent();\n                    return [4, _puppeteerSet.addScriptTpPage(\"./lib/files/injectable.js\")];\n                case 3:\n                    _a.sent();\n                    return [2];\n            }\n        });\n    });",
              "err": {},
              "uuid": "4dc0b4b1-9976-45da-b17c-15d31b2eec37",
              "parentUUID": "2f639c0f-3212-4c24-9fc7-ad7da3c02059",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should get an error message, when submiting incorrect username and password",
              "fullTitle": "Authentication test:  Should get an error message, when submiting incorrect username and password",
              "timedOut": false,
              "duration": 6450,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, _puppeteerSet.loadPage(\"https://www.delta.com/login/loginPage\", 5000)];\n                case 1:\n                    _a.sent();\n                    return [4, _puppeteerSet.click(page, selectors.username)];\n                case 2:\n                    _a.sent();\n                    return [4, _puppeteerSet.write(page, selectors.username, login.wrongUsername)];\n                case 3:\n                    _a.sent();\n                    return [4, _puppeteerSet.write(page, selectors.lastname, login.wongSurename)];\n                case 4:\n                    _a.sent();\n                    return [4, _puppeteerSet.write(page, selectors.password, login.wrongPassword)];\n                case 5:\n                    _a.sent();\n                    return [4, _puppeteerSet.click(page, selectors.submitButton)];\n                case 6:\n                    _a.sent();\n                    return [4, _puppeteerVerify.verifyElementToDisappear(page, selectors.loadingSpinner)];\n                case 7:\n                    _a.sent();\n                    return [4, _puppeteerVerify.verifyTextIsDisplayed(page, selectors.errMessage, login.errorMessage)];\n                case 8:\n                    _a.sent();\n                    return [2];\n            }\n        });\n    });",
              "err": {},
              "uuid": "a4d9f166-8e3f-4781-a762-426025df9fb4",
              "parentUUID": "2f639c0f-3212-4c24-9fc7-ad7da3c02059",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "98efe98a-ab1d-4b3a-a89f-46de26e7bf7a",
            "2ee1f846-91d1-4bb2-aa3a-fda0fcb9944a",
            "1dd6feae-aa4c-4214-a0b5-f56d3b4888d6",
            "4dc0b4b1-9976-45da-b17c-15d31b2eec37",
            "a4d9f166-8e3f-4781-a762-426025df9fb4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 22767,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": null,
      "version": "4.1.0"
    }
  }
}